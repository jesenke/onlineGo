// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/cacherpc.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SubKey               string   `protobuf:"bytes,2,opt,name=subKey,proto3" json:"subKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetRequest) GetSubKey() string {
	if m != nil {
		return m.SubKey
	}
	return ""
}

type GetResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 *Item    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{1}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *GetResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetResponse) GetData() *Item {
	if m != nil {
		return m.Data
	}
	return nil
}

type SetRequest struct {
	Item                 []*Item  `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{2}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetItem() []*Item {
	if m != nil {
		return m.Item
	}
	return nil
}

type SetResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Data                 []*Item  `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetResponse) Reset()         { *m = SetResponse{} }
func (m *SetResponse) String() string { return proto.CompactTextString(m) }
func (*SetResponse) ProtoMessage()    {}
func (*SetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{3}
}

func (m *SetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetResponse.Unmarshal(m, b)
}
func (m *SetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetResponse.Marshal(b, m, deterministic)
}
func (m *SetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetResponse.Merge(m, src)
}
func (m *SetResponse) XXX_Size() int {
	return xxx_messageInfo_SetResponse.Size(m)
}
func (m *SetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetResponse proto.InternalMessageInfo

func (m *SetResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SetResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *SetResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SetResponse) GetData() []*Item {
	if m != nil {
		return m.Data
	}
	return nil
}

type Item struct {
	Expire               int64    `protobuf:"varint,1,opt,name=expire,proto3" json:"expire,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	SubKey               string   `protobuf:"bytes,3,opt,name=subKey,proto3" json:"subKey,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{4}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *Item) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Item) GetSubKey() string {
	if m != nil {
		return m.SubKey
	}
	return ""
}

func (m *Item) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CountRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountRequest) Reset()         { *m = CountRequest{} }
func (m *CountRequest) String() string { return proto.CompactTextString(m) }
func (*CountRequest) ProtoMessage()    {}
func (*CountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{5}
}

func (m *CountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountRequest.Unmarshal(m, b)
}
func (m *CountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountRequest.Marshal(b, m, deterministic)
}
func (m *CountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountRequest.Merge(m, src)
}
func (m *CountRequest) XXX_Size() int {
	return xxx_messageInfo_CountRequest.Size(m)
}
func (m *CountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountRequest proto.InternalMessageInfo

func (m *CountRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type CountResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountResponse) Reset()         { *m = CountResponse{} }
func (m *CountResponse) String() string { return proto.CompactTextString(m) }
func (*CountResponse) ProtoMessage()    {}
func (*CountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{6}
}

func (m *CountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountResponse.Unmarshal(m, b)
}
func (m *CountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountResponse.Marshal(b, m, deterministic)
}
func (m *CountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountResponse.Merge(m, src)
}
func (m *CountResponse) XXX_Size() int {
	return xxx_messageInfo_CountResponse.Size(m)
}
func (m *CountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountResponse proto.InternalMessageInfo

func (m *CountResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CountResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CountResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ExistRequest struct {
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	SubKey               string   `protobuf:"bytes,3,opt,name=subKey,proto3" json:"subKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistRequest) Reset()         { *m = ExistRequest{} }
func (m *ExistRequest) String() string { return proto.CompactTextString(m) }
func (*ExistRequest) ProtoMessage()    {}
func (*ExistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{7}
}

func (m *ExistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistRequest.Unmarshal(m, b)
}
func (m *ExistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistRequest.Marshal(b, m, deterministic)
}
func (m *ExistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistRequest.Merge(m, src)
}
func (m *ExistRequest) XXX_Size() int {
	return xxx_messageInfo_ExistRequest.Size(m)
}
func (m *ExistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExistRequest proto.InternalMessageInfo

func (m *ExistRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ExistRequest) GetSubKey() string {
	if m != nil {
		return m.SubKey
	}
	return ""
}

type ExistResponse struct {
	Code                 int64    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Count                string   `protobuf:"bytes,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistResponse) Reset()         { *m = ExistResponse{} }
func (m *ExistResponse) String() string { return proto.CompactTextString(m) }
func (*ExistResponse) ProtoMessage()    {}
func (*ExistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{8}
}

func (m *ExistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistResponse.Unmarshal(m, b)
}
func (m *ExistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistResponse.Marshal(b, m, deterministic)
}
func (m *ExistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistResponse.Merge(m, src)
}
func (m *ExistResponse) XXX_Size() int {
	return xxx_messageInfo_ExistResponse.Size(m)
}
func (m *ExistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExistResponse proto.InternalMessageInfo

func (m *ExistResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ExistResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ExistResponse) GetCount() string {
	if m != nil {
		return m.Count
	}
	return ""
}

type TouchMvRequest struct {
	HashKey              string   `protobuf:"bytes,1,opt,name=hashKey,proto3" json:"hashKey,omitempty"`
	TargetAddr           string   `protobuf:"bytes,2,opt,name=targetAddr,proto3" json:"targetAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TouchMvRequest) Reset()         { *m = TouchMvRequest{} }
func (m *TouchMvRequest) String() string { return proto.CompactTextString(m) }
func (*TouchMvRequest) ProtoMessage()    {}
func (*TouchMvRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{9}
}

func (m *TouchMvRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TouchMvRequest.Unmarshal(m, b)
}
func (m *TouchMvRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TouchMvRequest.Marshal(b, m, deterministic)
}
func (m *TouchMvRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TouchMvRequest.Merge(m, src)
}
func (m *TouchMvRequest) XXX_Size() int {
	return xxx_messageInfo_TouchMvRequest.Size(m)
}
func (m *TouchMvRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TouchMvRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TouchMvRequest proto.InternalMessageInfo

func (m *TouchMvRequest) GetHashKey() string {
	if m != nil {
		return m.HashKey
	}
	return ""
}

func (m *TouchMvRequest) GetTargetAddr() string {
	if m != nil {
		return m.TargetAddr
	}
	return ""
}

type TouchMvResponse struct {
	Code                 int64    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TouchMvResponse) Reset()         { *m = TouchMvResponse{} }
func (m *TouchMvResponse) String() string { return proto.CompactTextString(m) }
func (*TouchMvResponse) ProtoMessage()    {}
func (*TouchMvResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e961471ef963ead6, []int{10}
}

func (m *TouchMvResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TouchMvResponse.Unmarshal(m, b)
}
func (m *TouchMvResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TouchMvResponse.Marshal(b, m, deterministic)
}
func (m *TouchMvResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TouchMvResponse.Merge(m, src)
}
func (m *TouchMvResponse) XXX_Size() int {
	return xxx_messageInfo_TouchMvResponse.Size(m)
}
func (m *TouchMvResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TouchMvResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TouchMvResponse proto.InternalMessageInfo

func (m *TouchMvResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TouchMvResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "proto.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "proto.GetResponse")
	proto.RegisterType((*SetRequest)(nil), "proto.SetRequest")
	proto.RegisterType((*SetResponse)(nil), "proto.SetResponse")
	proto.RegisterType((*Item)(nil), "proto.Item")
	proto.RegisterType((*CountRequest)(nil), "proto.CountRequest")
	proto.RegisterType((*CountResponse)(nil), "proto.CountResponse")
	proto.RegisterType((*ExistRequest)(nil), "proto.ExistRequest")
	proto.RegisterType((*ExistResponse)(nil), "proto.ExistResponse")
	proto.RegisterType((*TouchMvRequest)(nil), "proto.TouchMvRequest")
	proto.RegisterType((*TouchMvResponse)(nil), "proto.TouchMvResponse")
}

func init() { proto.RegisterFile("proto/cacherpc.proto", fileDescriptor_e961471ef963ead6) }

var fileDescriptor_e961471ef963ead6 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0x4d, 0x4f, 0xf2, 0x40,
	0x10, 0xc7, 0x53, 0xb6, 0x40, 0x98, 0xf2, 0xbc, 0xb8, 0x22, 0x69, 0x38, 0x48, 0xd3, 0x13, 0x07,
	0xc4, 0x88, 0x89, 0x72, 0x35, 0xc4, 0x10, 0x45, 0x2e, 0x2d, 0x47, 0x2f, 0xa5, 0xdd, 0x50, 0x34,
	0xd0, 0xda, 0x6e, 0x0d, 0x7c, 0x35, 0x3f, 0x9d, 0xd9, 0xed, 0xb6, 0x5d, 0x5e, 0x8c, 0x12, 0x4f,
	0x9d, 0x99, 0x9d, 0xff, 0xcc, 0x6f, 0x67, 0xb6, 0xd0, 0x08, 0xa3, 0x80, 0x06, 0x97, 0xae, 0xe3,
	0xfa, 0x24, 0x0a, 0xdd, 0x1e, 0x77, 0x71, 0x99, 0x7f, 0xcc, 0x1b, 0x80, 0x11, 0xa1, 0x16, 0x79,
	0x4b, 0x48, 0x4c, 0xf1, 0x7f, 0x40, 0xaf, 0x64, 0xa3, 0x2b, 0x86, 0xd2, 0xa9, 0x59, 0xcc, 0xc4,
	0x4d, 0xa8, 0xc4, 0xc9, 0x6c, 0x4c, 0x36, 0x7a, 0x89, 0x07, 0x85, 0x67, 0x4e, 0x41, 0xe3, 0xba,
	0x38, 0x0c, 0x56, 0x31, 0xc1, 0x18, 0x54, 0x37, 0xf0, 0x88, 0x50, 0x72, 0x9b, 0x15, 0x5b, 0xc6,
	0x73, 0xa1, 0x63, 0x26, 0x6e, 0x83, 0xea, 0x39, 0xd4, 0xd1, 0x91, 0xa1, 0x74, 0xb4, 0xbe, 0x96,
	0x92, 0xf4, 0x1e, 0x28, 0x59, 0x5a, 0xfc, 0xc0, 0xbc, 0x00, 0xb0, 0x0b, 0x9a, 0x36, 0xa8, 0x0b,
	0x4a, 0x96, 0xba, 0x62, 0xa0, 0xbd, 0x74, 0x76, 0x60, 0xbe, 0x80, 0x66, 0x1f, 0x0d, 0xd1, 0x80,
	0xb2, 0x1b, 0x24, 0x2b, 0xca, 0x29, 0x90, 0x95, 0x3a, 0x39, 0x9a, 0x7a, 0xa0, 0x17, 0x47, 0x7b,
	0x06, 0x95, 0x79, 0x6c, 0x20, 0x64, 0x1d, 0x2e, 0xa2, 0xb4, 0x0d, 0xb2, 0x84, 0x97, 0x8d, 0xae,
	0x74, 0x68, 0x74, 0x48, 0x1e, 0x1d, 0xc3, 0x14, 0xad, 0x94, 0x4e, 0x5d, 0x54, 0x37, 0xa0, 0x3e,
	0x64, 0x1c, 0x5f, 0x2e, 0xc2, 0x1c, 0xc3, 0x1f, 0x91, 0xf1, 0xfb, 0xdb, 0x9a, 0x03, 0xa8, 0xdf,
	0xaf, 0x17, 0xf1, 0x6e, 0xbb, 0xef, 0xe1, 0x19, 0x86, 0x50, 0x16, 0x18, 0xc3, 0x0c, 0x03, 0x59,
	0xdc, 0x66, 0xe5, 0x26, 0x05, 0xc6, 0x64, 0x17, 0xa3, 0x96, 0x61, 0x3c, 0xc2, 0xdf, 0x69, 0x90,
	0xb8, 0xfe, 0xe4, 0x3d, 0x03, 0xd1, 0xa1, 0xea, 0x3b, 0xb1, 0x3f, 0xce, 0xef, 0x9e, 0xb9, 0xf8,
	0x1c, 0x80, 0x3a, 0xd1, 0x9c, 0xd0, 0x3b, 0xcf, 0x8b, 0x44, 0x69, 0x29, 0x62, 0xde, 0xc2, 0xbf,
	0xbc, 0xd6, 0x31, 0x68, 0xfd, 0x8f, 0x12, 0x54, 0x6d, 0x1a, 0x44, 0xce, 0x9c, 0xe0, 0x2e, 0xa0,
	0x11, 0xa1, 0xf8, 0x44, 0xac, 0xbf, 0xf8, 0x33, 0x5a, 0x58, 0x0e, 0x89, 0xfa, 0x5d, 0x40, 0xb6,
	0x94, 0x6d, 0xef, 0x67, 0xcb, 0xaf, 0xb3, 0x0f, 0x65, 0x3e, 0x39, 0x7c, 0x2a, 0x0e, 0xe5, 0x0d,
	0xb4, 0x1a, 0xdb, 0xc1, 0x42, 0xc3, 0x97, 0x9e, 0x6b, 0xe4, 0x47, 0x92, 0x6b, 0xb6, 0xdf, 0xc5,
	0x15, 0xa8, 0x4f, 0x72, 0x9b, 0x1f, 0x48, 0x06, 0x50, 0x15, 0xb3, 0xc3, 0x67, 0x22, 0x61, 0x7b,
	0x2f, 0xad, 0xe6, 0x6e, 0x38, 0x55, 0xce, 0x2a, 0x3c, 0x7c, 0xfd, 0x19, 0x00, 0x00, 0xff, 0xff,
	0x02, 0x7a, 0xcd, 0x88, 0x64, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageClient is the client API for Storage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error)
	Exist(ctx context.Context, in *ExistRequest, opts ...grpc.CallOption) (*ExistResponse, error)
	Count(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error)
	List(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error)
	TouchMv(ctx context.Context, in *TouchMvRequest, opts ...grpc.CallOption) (*TouchMvResponse, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/proto.Storage/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error) {
	out := new(SetResponse)
	err := c.cc.Invoke(ctx, "/proto.Storage/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Exist(ctx context.Context, in *ExistRequest, opts ...grpc.CallOption) (*ExistResponse, error) {
	out := new(ExistResponse)
	err := c.cc.Invoke(ctx, "/proto.Storage/Exist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Count(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error) {
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, "/proto.Storage/Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) List(ctx context.Context, in *CountRequest, opts ...grpc.CallOption) (*CountResponse, error) {
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, "/proto.Storage/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) TouchMv(ctx context.Context, in *TouchMvRequest, opts ...grpc.CallOption) (*TouchMvResponse, error) {
	out := new(TouchMvResponse)
	err := c.cc.Invoke(ctx, "/proto.Storage/TouchMv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServer is the server API for Storage service.
type StorageServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Set(context.Context, *SetRequest) (*SetResponse, error)
	Exist(context.Context, *ExistRequest) (*ExistResponse, error)
	Count(context.Context, *CountRequest) (*CountResponse, error)
	List(context.Context, *CountRequest) (*CountResponse, error)
	TouchMv(context.Context, *TouchMvRequest) (*TouchMvResponse, error)
}

// UnimplementedStorageServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServer struct {
}

func (*UnimplementedStorageServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedStorageServer) Set(ctx context.Context, req *SetRequest) (*SetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedStorageServer) Exist(ctx context.Context, req *ExistRequest) (*ExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exist not implemented")
}
func (*UnimplementedStorageServer) Count(ctx context.Context, req *CountRequest) (*CountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Count not implemented")
}
func (*UnimplementedStorageServer) List(ctx context.Context, req *CountRequest) (*CountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedStorageServer) TouchMv(ctx context.Context, req *TouchMvRequest) (*TouchMvResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TouchMv not implemented")
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Storage/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Storage/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Exist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Exist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Storage/Exist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Exist(ctx, req.(*ExistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Storage/Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Count(ctx, req.(*CountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Storage/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).List(ctx, req.(*CountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_TouchMv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TouchMvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).TouchMv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Storage/TouchMv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).TouchMv(ctx, req.(*TouchMvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Storage_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _Storage_Set_Handler,
		},
		{
			MethodName: "Exist",
			Handler:    _Storage_Exist_Handler,
		},
		{
			MethodName: "Count",
			Handler:    _Storage_Count_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Storage_List_Handler,
		},
		{
			MethodName: "TouchMv",
			Handler:    _Storage_TouchMv_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/cacherpc.proto",
}
